# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

stages:

- stage: Test
  displayName: Test
  jobs:
    - job: Test
      pool:
        name: Default
      steps:
      - script: echo Test
        displayName: 'Prepare Testing'

      - task: PowerShell@2
        inputs:
          filePath: $(System.DefaultWorkingDirectory)\Invoke-ToscaCloudPlaylist.ps1
          arguments: >
            -TokenUrl "$(ToscaAuthURL)"
            -ClientId "$(ToscaClientId)"
            -ClientSecret "$(ToscaClientSecret)"
            -Scope "tta"
            -TenantBaseUrl "https://$(ToscaTenant).my.tricentis.com/$(ToscaWorkspaceID)"
            -PlaylistConfigFilePath "PlaylistConfig.json"
            -ResultsFileName "results.xml"
            -ResultsFolderPath "C:\Tricentis\Tosca\Results"
        displayName: 'Execute Tosca Cloud Playlist and Upload Results'


  
      - task: PowerShell@2
        displayName: 'Convert JUnit results to UTF-8'
        inputs:
          targetType: 'inline'
          script: |
            $source = "C:\Tricentis\Tosca\Results\results.xml"
            $dest = "C:\Tricentis\Tosca\Results\results_utf8.xml"
            [IO.File]::WriteAllText($dest, (Get-Content -Raw $source), [Text.Encoding]::UTF8)


      - task: PublishTestResults@2
        displayName: 'Publish Test Results'
        inputs:
          testResultsFiles: 'C:\Tricentis\Tosca\Results\results_utf8.xml'
          testResultsFormat: 'JUnit'